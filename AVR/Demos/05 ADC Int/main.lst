   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.rodata.str1.1,"aMS",@progbits,1
  11               	.LC0:
  12 0000 6164 6320 		.string	"adc val: %04d"
  12      7661 6C3A 
  12      2025 3034 
  12      6400 
  13               	.LC1:
  14 000e 6164 6320 		.string	"adc intr (%02d)"
  14      696E 7472 
  14      2028 2530 
  14      3264 2900 
  15               		.section	.text.startup,"ax",@progbits
  16               	.global	main
  18               	main:
  19               	.LFB7:
  20               		.file 1 "main.c"
   1:main.c        **** #include <stdio.h>
   2:main.c        **** #include <avr/io.h>
   3:main.c        **** #include <util/delay.h>
   4:main.c        **** #include "lcd.h"
   5:main.c        **** #include "adc_intr.h"
   6:main.c        **** 
   7:main.c        **** int main(void)
   8:main.c        **** {
  21               		.loc 1 8 1 view -0
  22               		.cfi_startproc
  23 0000 CDB7      		in r28,__SP_L__
  24 0002 DEB7      		in r29,__SP_H__
  25               	.LCFI0:
  26               		.cfi_def_cfa_register 28
  27 0004 A897      		sbiw r28,40
  28               	.LCFI1:
  29               		.cfi_def_cfa_offset 42
  30 0006 0FB6      		in __tmp_reg__,__SREG__
  31 0008 F894      		cli
  32 000a DEBF      		out __SP_H__,r29
  33 000c 0FBE      		out __SREG__,__tmp_reg__
  34 000e CDBF      		out __SP_L__,r28
  35               	/* prologue: function */
  36               	/* frame size = 40 */
  37               	/* stack size = 40 */
  38               	.L__stack_usage = 40
   9:main.c        **** 	char str[20], cnt_str[20];
  39               		.loc 1 9 2 view .LVU1
  10:main.c        **** 	int16_t cnt = 0;
  40               		.loc 1 10 2 view .LVU2
  41               	.LVL0:
  11:main.c        **** 	lcd_init();
  42               		.loc 1 11 2 view .LVU3
  43 0010 0E94 0000 		call lcd_init
  44               	.LVL1:
  12:main.c        **** 	adc_init();
  45               		.loc 1 12 2 view .LVU4
  46 0014 0E94 0000 		call adc_init
  47               	.LVL2:
  13:main.c        **** 
  14:main.c        **** 	// lcd_putstring(0,"yee ganeeesh");
  15:main.c        **** 
  16:main.c        **** 	_delay_ms(5000);
  48               		.loc 1 16 2 view .LVU5
  49               	.LBB6:
  50               	.LBI6:
  51               		.file 2 "/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h"
   1:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    All rights reserved.
   5:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
   6:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
   9:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
  12:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****      distribution.
  16:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
  17:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
  21:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
  33:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
  35:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
  38:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #  endif
  42:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
  44:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #include <inttypes.h>
  45:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #include <math.h>
  47:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
  48:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** /** \file */
  49:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     \code
  51:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     \endcode
  55:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
  56:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     used.
  60:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
  61:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
  70:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     routines linked into the application.
  78:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
  79:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
  83:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** */
  84:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
  85:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #endif
  89:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
  90:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #ifndef F_CPU
  91:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     \def F_CPU
  95:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
  97:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
 103:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     integer value.
 107:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****  */
 108:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #endif
 110:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
 111:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #endif
 114:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
 115:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #  include <math.h>
 119:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #endif
 120:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
 121:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** /**
 122:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    \ingroup util_delay
 123:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
 124:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
 126:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
 129:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
 131:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
 137:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
 142:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    microseconds of delay.
 146:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
 147:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    respectively.
 151:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
 152:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    \note
 153:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
 154:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    not available to the compiler then.
 163:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
 164:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****  */
 165:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** void
 166:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** _delay_ms(double __ms)
  52               		.loc 2 166 1 view .LVU6
  53               	.LBB7:
 167:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** {
 168:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 	double __tmp ;
  54               		.loc 2 168 2 view .LVU7
 169:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
  55               		.loc 2 172 2 view .LVU8
 173:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
  56               		.loc 2 173 2 view .LVU9
 174:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
  57               		.loc 2 174 2 view .LVU10
 175:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
 176:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
 179:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
 182:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 	#else
 183:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 		//round up by default
 184:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
  58               		.loc 2 184 3 view .LVU11
 185:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 	#endif
 186:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
 187:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
  59               		.loc 2 187 2 view .LVU12
  60 0018 2FEF      		ldi r18,lo8(7999999)
  61 001a 31E1      		ldi r19,hi8(7999999)
  62 001c 4AE7      		ldi r20,hlo8(7999999)
  63 001e 2150      	1:	subi r18,1
  64 0020 3040      		sbci r19,0
  65 0022 4040      		sbci r20,0
  66 0024 01F4      		brne 1b
  67 0026 00C0      		rjmp .
  68 0028 0000      		nop
  69               	.LBE7:
  70               	.LBE6:
  10:main.c        **** 	lcd_init();
  71               		.loc 1 10 10 is_stmt 0 view .LVU13
  72 002a 90E0      		ldi r25,0
  73 002c 80E0      		ldi r24,0
  17:main.c        **** 	while(1)
  18:main.c        **** 	{
  19:main.c        **** 		// start conversion
  20:main.c        **** 		ADCSRA |= BV(ADSC);
  21:main.c        **** 
  22:main.c        **** 		if(adc_flag)
  23:main.c        **** 		{
  24:main.c        **** 			sprintf(str, "adc val: %04d", adc_val, cnt++);
  25:main.c        **** 			lcd_putstring(1, str);
  26:main.c        **** 			adc_flag = 0;
  27:main.c        **** 		}
  28:main.c        **** 		else
  29:main.c        **** 		{
  30:main.c        **** 			sprintf(cnt_str, "adc intr (%02d)", cnt++);
  74               		.loc 1 30 4 view .LVU14
  75 002e 20E0      		ldi r18,lo8(.LC1)
  76 0030 E22E      		mov r14,r18
  77 0032 20E0      		ldi r18,hi8(.LC1)
  78 0034 F22E      		mov r15,r18
  79 0036 9E01      		movw r18,r28
  80 0038 2F5F      		subi r18,-1
  81 003a 3F4F      		sbci r19,-1
  82 003c 6901      		movw r12,r18
  24:main.c        **** 			lcd_putstring(1, str);
  83               		.loc 1 24 4 view .LVU15
  84 003e 30E0      		ldi r19,lo8(.LC0)
  85 0040 A32E      		mov r10,r19
  86 0042 30E0      		ldi r19,hi8(.LC0)
  87 0044 B32E      		mov r11,r19
  88 0046 8E01      		movw r16,r28
  89 0048 0B5E      		subi r16,-21
  90 004a 1F4F      		sbci r17,-1
  91               	.LVL3:
  92               	.L4:
  17:main.c        **** 	while(1)
  93               		.loc 1 17 2 is_stmt 1 view .LVU16
  20:main.c        **** 
  94               		.loc 1 20 3 view .LVU17
  20:main.c        **** 
  95               		.loc 1 20 10 is_stmt 0 view .LVU18
  96 004c 369A      		sbi 0x6,6
  22:main.c        **** 		{
  97               		.loc 1 22 3 is_stmt 1 view .LVU19
  22:main.c        **** 		{
  98               		.loc 1 22 6 is_stmt 0 view .LVU20
  99 004e 2091 0000 		lds r18,adc_flag
 100 0052 3091 0000 		lds r19,adc_flag+1
 101 0056 4C01      		movw r8,r24
 102 0058 4FEF      		ldi r20,-1
 103 005a 841A      		sub r8,r20
 104 005c 940A      		sbc r9,r20
  22:main.c        **** 		{
 105               		.loc 1 22 5 view .LVU21
 106 005e 232B      		or r18,r19
 107 0060 01F0      		breq .L2
  24:main.c        **** 			lcd_putstring(1, str);
 108               		.loc 1 24 4 is_stmt 1 view .LVU22
 109               	.LVL4:
  24:main.c        **** 			lcd_putstring(1, str);
 110               		.loc 1 24 4 is_stmt 0 view .LVU23
 111 0062 2091 0000 		lds r18,adc_val
 112 0066 3091 0000 		lds r19,adc_val+1
 113 006a 9F93      		push r25
 114 006c 8F93      		push r24
 115 006e 3F93      		push r19
 116 0070 2F93      		push r18
 117 0072 BF92      		push r11
 118 0074 AF92      		push r10
 119 0076 1F93      		push r17
 120 0078 0F93      		push r16
 121 007a 0E94 0000 		call sprintf
 122               	.LVL5:
  25:main.c        **** 			adc_flag = 0;
 123               		.loc 1 25 4 is_stmt 1 view .LVU24
 124 007e B801      		movw r22,r16
 125 0080 81E0      		ldi r24,lo8(1)
 126 0082 0E94 0000 		call lcd_putstring
 127               	.LVL6:
  26:main.c        **** 		}
 128               		.loc 1 26 4 view .LVU25
  26:main.c        **** 		}
 129               		.loc 1 26 13 is_stmt 0 view .LVU26
 130 0086 1092 0000 		sts adc_flag+1,__zero_reg__
 131 008a 1092 0000 		sts adc_flag,__zero_reg__
 132 008e 0FB6      		in __tmp_reg__,__SREG__
 133 0090 F894      		cli
 134 0092 DEBF      		out __SP_H__,r29
 135 0094 0FBE      		out __SREG__,__tmp_reg__
 136 0096 CDBF      		out __SP_L__,r28
 137               	.LVL7:
 138               	.L3:
  31:main.c        **** 			lcd_putstring(0, cnt_str);
  32:main.c        **** 		}
  33:main.c        **** 		_delay_ms(200);
 139               		.loc 1 33 3 is_stmt 1 view .LVU27
 140               	.LBB8:
 141               	.LBI8:
 166:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** {
 142               		.loc 2 166 1 view .LVU28
 143               	.LBB9:
 168:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 144               		.loc 2 168 2 view .LVU29
 172:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 145               		.loc 2 172 2 view .LVU30
 173:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 146               		.loc 2 173 2 view .LVU31
 174:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
 147               		.loc 2 174 2 view .LVU32
 184:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 	#endif
 148               		.loc 2 184 3 view .LVU33
 149               		.loc 2 187 2 view .LVU34
 150 0098 9FEF      		ldi r25,lo8(319999)
 151 009a 21EE      		ldi r18,hi8(319999)
 152 009c 34E0      		ldi r19,hlo8(319999)
 153 009e 9150      	1:	subi r25,1
 154 00a0 2040      		sbci r18,0
 155 00a2 3040      		sbci r19,0
 156 00a4 01F4      		brne 1b
 157 00a6 00C0      		rjmp .
 158 00a8 0000      		nop
 159 00aa C401      		movw r24,r8
 160 00ac 00C0      		rjmp .L4
 161               	.LVL8:
 162               	.L2:
 163               		.loc 2 187 2 is_stmt 0 view .LVU35
 164               	.LBE9:
 165               	.LBE8:
  30:main.c        **** 			lcd_putstring(0, cnt_str);
 166               		.loc 1 30 4 is_stmt 1 view .LVU36
  30:main.c        **** 			lcd_putstring(0, cnt_str);
 167               		.loc 1 30 4 is_stmt 0 view .LVU37
 168 00ae 9F93      		push r25
 169 00b0 8F93      		push r24
 170 00b2 FF92      		push r15
 171 00b4 EF92      		push r14
 172 00b6 DF92      		push r13
 173 00b8 CF92      		push r12
 174 00ba 0E94 0000 		call sprintf
 175               	.LVL9:
  31:main.c        **** 		}
 176               		.loc 1 31 4 is_stmt 1 view .LVU38
 177 00be B601      		movw r22,r12
 178 00c0 80E0      		ldi r24,0
 179 00c2 0E94 0000 		call lcd_putstring
 180               	.LVL10:
 181 00c6 0F90      		pop __tmp_reg__
 182 00c8 0F90      		pop __tmp_reg__
 183 00ca 0F90      		pop __tmp_reg__
 184 00cc 0F90      		pop __tmp_reg__
 185 00ce 0F90      		pop __tmp_reg__
 186 00d0 0F90      		pop __tmp_reg__
 187 00d2 00C0      		rjmp .L3
 188               		.cfi_endproc
 189               	.LFE7:
 191               		.text
 192               	.Letext0:
 193               		.file 3 "/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/stdint.h"
 194               		.file 4 "/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/stdio.h"
 195               		.file 5 "adc_intr.h"
 196               		.file 6 "lcd.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccacJuei.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccacJuei.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccacJuei.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccacJuei.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccacJuei.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccacJuei.s:18     .text.startup:0000000000000000 main

UNDEFINED SYMBOLS
lcd_init
adc_init
adc_flag
adc_val
sprintf
lcd_putstring
__do_copy_data
