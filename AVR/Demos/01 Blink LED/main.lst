   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.startup,"ax",@progbits
  11               	.global	main
  13               	main:
  14               	.LFB6:
  15               		.file 1 "main.c"
   1:main.c        **** #include <avr/io.h>
   2:main.c        **** #include <util/delay.h>
   3:main.c        **** 
   4:main.c        **** //Hw: PA --> LEDs
   5:main.c        **** //	0 -- glow
   6:main.c        **** //	1 -- off
   7:main.c        **** 
   8:main.c        **** int main(void)
   9:main.c        **** {
  16               		.loc 1 9 1 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  10:main.c        **** 	uint8_t data = 0xAA;
  22               		.loc 1 10 2 view .LVU1
  23               	.LVL0:
  11:main.c        **** 	// make PA as output
  12:main.c        **** 	
  13:main.c        **** 	DDRC = 0xFF;
  24               		.loc 1 13 2 view .LVU2
  25               		.loc 1 13 7 is_stmt 0 view .LVU3
  26 0000 8FEF      		ldi r24,lo8(-1)
  27 0002 84BB      		out 0x14,r24
  10:main.c        **** 	uint8_t data = 0xAA;
  28               		.loc 1 10 10 view .LVU4
  29 0004 8AEA      		ldi r24,lo8(-86)
  30               	.LVL1:
  31               	.L2:
  14:main.c        **** 	while(1)
  32               		.loc 1 14 2 is_stmt 1 discriminator 1 view .LVU5
  15:main.c        **** 	{
  16:main.c        **** 		// write data on PC (to ON/OFF leds)
  17:main.c        **** 		PORTC = data;
  33               		.loc 1 17 3 discriminator 1 view .LVU6
  34               		.loc 1 17 9 is_stmt 0 discriminator 1 view .LVU7
  35 0006 85BB      		out 0x15,r24
  18:main.c        **** 		// delay
  19:main.c        **** 		_delay_ms(1000);
  36               		.loc 1 19 3 is_stmt 1 discriminator 1 view .LVU8
  37               	.LVL2:
  38               	.LBB4:
  39               	.LBI4:
  40               		.file 2 "/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h"
   1:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    All rights reserved.
   5:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
   6:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
   9:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
  12:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****      distribution.
  16:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
  17:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
  21:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
  33:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
  35:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
  38:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #  endif
  42:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
  44:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #include <inttypes.h>
  45:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #include <math.h>
  47:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
  48:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** /** \file */
  49:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     \code
  51:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     \endcode
  55:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
  56:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     used.
  60:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
  61:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
  70:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     routines linked into the application.
  78:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
  79:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
  83:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** */
  84:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
  85:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #endif
  89:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
  90:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #ifndef F_CPU
  91:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     \def F_CPU
  95:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
  97:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
 103:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****     integer value.
 107:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****  */
 108:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #endif
 110:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
 111:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #endif
 114:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
 115:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #  include <math.h>
 119:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #endif
 120:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
 121:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** /**
 122:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    \ingroup util_delay
 123:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
 124:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
 126:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
 129:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
 131:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
 137:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
 142:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    microseconds of delay.
 146:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
 147:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    respectively.
 151:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
 152:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    \note
 153:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
 154:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****    not available to the compiler then.
 163:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
 164:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****  */
 165:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** void
 166:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** _delay_ms(double __ms)
  41               		.loc 2 166 1 discriminator 1 view .LVU9
  42               	.LBB5:
 167:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** {
 168:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 	double __tmp ;
  43               		.loc 2 168 2 discriminator 1 view .LVU10
 169:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
  44               		.loc 2 172 2 discriminator 1 view .LVU11
 173:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
  45               		.loc 2 173 2 discriminator 1 view .LVU12
 174:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
  46               		.loc 2 174 2 discriminator 1 view .LVU13
 175:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
 176:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
 179:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
 182:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 	#else
 183:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 		//round up by default
 184:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
  47               		.loc 2 184 3 discriminator 1 view .LVU14
 185:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 	#endif
 186:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 
 187:/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
  48               		.loc 2 187 2 discriminator 1 view .LVU15
  49 0008 2FEF      		ldi r18,lo8(1599999)
  50 000a 39E6      		ldi r19,hi8(1599999)
  51 000c 98E1      		ldi r25,hlo8(1599999)
  52 000e 2150      	1:	subi r18,1
  53 0010 3040      		sbci r19,0
  54 0012 9040      		sbci r25,0
  55 0014 01F4      		brne 1b
  56 0016 00C0      		rjmp .
  57 0018 0000      		nop
  58               	.LVL3:
  59               		.loc 2 187 2 is_stmt 0 discriminator 1 view .LVU16
  60               	.LBE5:
  61               	.LBE4:
  20:main.c        **** 		// change led pattern
  21:main.c        **** 		data = ~data;
  62               		.loc 1 21 3 is_stmt 1 discriminator 1 view .LVU17
  63               		.loc 1 21 8 is_stmt 0 discriminator 1 view .LVU18
  64 001a 8095      		com r24
  65               	.LVL4:
  66               		.loc 1 21 8 discriminator 1 view .LVU19
  67 001c 00C0      		rjmp .L2
  68               		.cfi_endproc
  69               	.LFE6:
  71               		.text
  72               	.Letext0:
  73               		.file 3 "/home/sunbeam/D_day/AVR/softwares/avr-gcc-8.2.0-x64-linux/avr/include/stdint.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cctilqDh.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cctilqDh.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cctilqDh.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cctilqDh.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cctilqDh.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/cctilqDh.s:13     .text.startup:0000000000000000 main

NO UNDEFINED SYMBOLS
